{"remainingRequest":"/Users/xl/xlxlxl/rss-web/client/node_modules/babel-loader/lib/index.js!/Users/xl/xlxlxl/rss-web/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xl/xlxlxl/rss-web/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xl/xlxlxl/rss-web/client/src/page/home/SiderBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xl/xlxlxl/rss-web/client/src/page/home/SiderBar.vue","mtime":1663294546255},{"path":"/Users/xl/xlxlxl/rss-web/client/babel.config.js","mtime":1663294546246},{"path":"/Users/xl/xlxlxl/rss-web/client/node_modules/cache-loader/dist/cjs.js","mtime":1663294660763},{"path":"/Users/xl/xlxlxl/rss-web/client/node_modules/babel-loader/lib/index.js","mtime":1653875377507},{"path":"/Users/xl/xlxlxl/rss-web/client/node_modules/cache-loader/dist/cjs.js","mtime":1663294660763},{"path":"/Users/xl/xlxlxl/rss-web/client/node_modules/vue-loader/lib/index.js","mtime":1663294661325}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/xl/xlxlxl/rss-web/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js\";\nimport CollapseMenuItem from \"./CollapseMenuItem\";\nimport CategoryAPI from \"../../api/category\";\nimport ResourceAPI from \"../../api/resource\";\nexport default {\n  name: 'sider-bar',\n  components: {\n    CollapseMenuItem: CollapseMenuItem\n  },\n  data: function data() {\n    return {\n      categoryModal: false,\n      rssModal: false,\n      categoryName: '',\n      //添加分类的名称\n      rssUrl: '',\n      //添加rss的url\n      addRssCategoryId: -1,\n      //添加rss时的分类id\n      refreshArticleBtnClick: null\n    };\n  },\n  created: function created() {\n    this.refreshArticleBtnClick = this.throttle(this.handleArticleRefresh);\n  },\n  computed: {\n    //用户头像\n    userAvatar: function userAvatar() {\n      return this.$store.user.avatar;\n    },\n    //用户rss分类\n    categoryList: function categoryList() {\n      return this.$store.categoryList;\n    }\n  },\n  methods: {\n    openRssAddModal: function openRssAddModal(id) {\n      this.addRssCategoryId = id;\n      this.rssModal = !this.rssModal;\n    },\n    //添加rss分类\n    handleAddCategory: function () {\n      var _handleAddCategory = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.categoryModal = false;\n\n                if (this.categoryName) {\n                  _context.next = 4;\n                  break;\n                }\n\n                this.$Message.error('分类名称不能为空');\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.next = 6;\n                return CategoryAPI.add({\n                  name: this.categoryName.trim()\n                });\n\n              case 6:\n                res = _context.sent;\n\n                if (res.data.status) {\n                  this.$store.categoryList.unshift(res.data.data);\n                } else {\n                  this.$Message.error(res.data.data);\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleAddCategory() {\n        return _handleAddCategory.apply(this, arguments);\n      }\n\n      return handleAddCategory;\n    }(),\n    //添加rss\n    handleAddRss: function () {\n      var _handleAddRss = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.rssModal = false;\n\n                if (this.rssUrl) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                this.$Message.error('rss资源链接不能为空');\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                _context2.next = 6;\n                return ResourceAPI.add({\n                  url: this.rssUrl,\n                  categoryId: this.addRssCategoryId\n                });\n\n              case 6:\n                res = _context2.sent;\n\n                if (res.data.status) {\n                  this.$store.resourceList.unshift(res.data.data.resource);\n                } else {\n                  this.$Message.error(res.data.data);\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleAddRss() {\n        return _handleAddRss.apply(this, arguments);\n      }\n\n      return handleAddRss;\n    }(),\n    //刷新文章 再次拉取文章 查看是否有新的文章\n    handleArticleRefresh: function () {\n      var _handleArticleRefresh = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.$store.isLoading = true;\n                _context3.next = 3;\n                return ResourceAPI.refreshArticle(this.$store.rssId);\n\n              case 3:\n                res = _context3.sent;\n\n                if (res.data.status) {\n                  this.$store.articleList = res.data.data;\n                } else {\n                  this.$Message.error(res.data.data);\n                }\n\n                this.$store.isLoading = false;\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleArticleRefresh() {\n        return _handleArticleRefresh.apply(this, arguments);\n      }\n\n      return handleArticleRefresh;\n    }(),\n    //节流\n    throttle: function throttle(fn) {\n      var _this = this;\n\n      var map = {};\n      return function () {\n        if (!map[_this.$store.rssId]) {\n          map[_this.$store.rssId] = true;\n          fn();\n          setTimeout(function () {\n            map[_this.$store.rssId] = false;\n          }, 5 * 60 * 1000);\n        } else {\n          _this.$Message.error('不要频繁刷新');\n        }\n      };\n    },\n    //分类上下文菜单\n    handleCategoryContextMenu: function () {\n      var _handleCategoryContextMenu = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(op) {\n        var _this2 = this;\n\n        var res, index;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(op === 'delete')) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                _context4.next = 3;\n                return CategoryAPI.delete(this.$store.contextMenuCId);\n\n              case 3:\n                res = _context4.sent;\n\n                if (res.data.status) {\n                  if (res.data.status) {\n                    //删除store里面的数据\n                    index = this.$store.categoryList.findIndex(function (item) {\n                      return item.id === _this2.$store.contextMenuCId;\n                    });\n\n                    if (index !== -1) {\n                      this.$store.categoryList.splice(index, 1);\n                    } else {\n                      this.$Message.error('发生错误');\n                    }\n                  } else {\n                    this.$Message.error(res.data.data);\n                  }\n                }\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handleCategoryContextMenu(_x) {\n        return _handleCategoryContextMenu.apply(this, arguments);\n      }\n\n      return handleCategoryContextMenu;\n    }(),\n    //rss 上下文菜单\n    handleRssContextMenu: function () {\n      var _handleRssContextMenu = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(op) {\n        var _this3 = this;\n\n        var res, index;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(op === 'delete')) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                _context5.next = 3;\n                return ResourceAPI.delete(this.$store.contextMenuRId);\n\n              case 3:\n                res = _context5.sent;\n\n                if (res.data.status) {\n                  if (res.data.status) {\n                    //删除store里面的数据\n                    index = this.$store.resourceList.findIndex(function (item) {\n                      return item.id === _this3.$store.contextMenuRId;\n                    });\n\n                    if (index !== -1) {\n                      this.$store.resourceList.splice(index, 1);\n                    } else {\n                      this.$Message.error('发生错误');\n                    }\n                  } else {\n                    this.$Message.error(res.data.data);\n                  }\n                }\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function handleRssContextMenu(_x2) {\n        return _handleRssContextMenu.apply(this, arguments);\n      }\n\n      return handleRssContextMenu;\n    }()\n  }\n};",{"version":3,"mappings":";;;AA6GA;AACA;AACA;AAEA;EACAA,iBADA;EAEAC;IACAC;EADA,CAFA;EAKAC,IALA,kBAKA;IACA;MACAC,oBADA;MAEAC,eAFA;MAGAC,gBAHA;MAGA;MACAC,UAJA;MAIA;MACAC,oBALA;MAKA;MACAC;IANA;EAQA,CAdA;EAeAC,OAfA,qBAeA;IACA;EACA,CAjBA;EAkBAC;IACA;IACAC,UAFA,wBAEA;MACA;IACA,CAJA;IAKA;IACAC,YANA,0BAMA;MACA;IACA;EARA,CAlBA;EA4BAC;IACAC,eADA,2BACAC,EADA,EACA;MACA;MACA;IACA,CAJA;IAKA;IACAC,iBANA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAOA;;gBAPA,IASA,iBATA;kBAAA;kBAAA;gBAAA;;gBAUA;gBAVA;;cAAA;gBAAA;gBAAA,OAcAC;kBACAlB;gBADA,EAdA;;cAAA;gBAcAmB,GAdA;;gBAiBA;kBACA;gBACA,CAFA,MAEA;kBACA;gBACA;;cArBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAuBA;IACAC,YAxBA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAyBA;;gBAzBA,IA2BA,WA3BA;kBAAA;kBAAA;gBAAA;;gBA4BA;gBA5BA;;cAAA;gBAAA;gBAAA,OAgCAC;kBACAC,gBADA;kBAEAC;gBAFA,EAhCA;;cAAA;gBAgCAJ,GAhCA;;gBAqCA;kBACA;gBACA,CAFA,MAEA;kBACA;gBACA;;cAzCA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IA4CA;IACAK,oBA7CA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBA8CA;gBA9CA;gBAAA,OAgDAH,6CAhDA;;cAAA;gBAgDAF,GAhDA;;gBAiDA;kBACA;gBACA,CAFA,MAEA;kBACA;gBACA;;gBAEA;;cAvDA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAyDA;IACAM,QA1DA,oBA0DAC,EA1DA,EA0DA;MAAA;;MACA;MACA;QACA;UACAC;UACAD;UACAE;YAAAD;UAAA;QACA,CAJA,MAIA;UACA;QACA;MACA,CARA;IASA,CArEA;IAsEA;IACAE,yBAvEA;MAAA,2GAuEAC,EAvEA;QAAA;;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,MAwEAA,eAxEA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAyEAZ,8CAzEA;;cAAA;gBAyEAC,GAzEA;;gBA0EA;kBACA;oBACA;oBACAY,KAFA,GAEA;sBAAA;oBAAA,EAFA;;oBAGA;sBACA;oBACA,CAFA,MAEA;sBACA;oBACA;kBACA,CARA,MAQA;oBACA;kBACA;gBACA;;cAtFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IA0FA;IACAC,oBA3FA;MAAA,sGA2FAF,EA3FA;QAAA;;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,MA4FAA,eA5FA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OA6FAT,8CA7FA;;cAAA;gBA6FAF,GA7FA;;gBA8FA;kBACA;oBACA;oBACAY,KAFA,GAEA;sBAAA;oBAAA,EAFA;;oBAGA;sBACA;oBACA,CAFA,MAEA;sBACA;oBACA;kBACA,CARA,MAQA;oBACA;kBACA;gBACA;;cA1GA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;AA5BA","names":["name","components","CollapseMenuItem","data","categoryModal","rssModal","categoryName","rssUrl","addRssCategoryId","refreshArticleBtnClick","created","computed","userAvatar","categoryList","methods","openRssAddModal","id","handleAddCategory","CategoryAPI","res","handleAddRss","ResourceAPI","url","categoryId","handleArticleRefresh","throttle","fn","map","setTimeout","handleCategoryContextMenu","op","index","handleRssContextMenu"],"sourceRoot":"src/page/home","sources":["SiderBar.vue"],"sourcesContent":["<template>\n    <div class=\"sider-bar\">\n        <div class=\"user\">\n            <img :src=\"userAvatar\">\n        </div>\n        <div class=\"menu\">\n            <div class=\"group\">\n                <div class=\"item\">\n                    <div>\n                        <Icon type=\"md-time\" />\n                        <p>稍后读</p>\n                    </div>\n                </div>\n                <div class=\"item\">\n                    <div>\n                        <Icon type=\"md-star-outline\" />\n                        <p>收藏</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"group\">\n                <CollapseMenuItem \n                    v-for=\"item in categoryList\" \n                    :key=\"item.id\" \n                    :name=\"item.name\" \n                    :id=\"item.id\" \n                    @onAddRss=\"openRssAddModal($event)\"/>\n            </div>\n            \n            <div class=\"group\">\n                <div class=\"item\">\n                    <div>\n                        <Icon type=\"ios-help-circle-outline\" />\n                        <p>帮助</p>\n                    </div>\n                </div>\n                <div class=\"item\">\n                    <div>\n                        <Icon type=\"ios-mail-open-outline\" />\n                        <p>问题反馈</p>\n                    </div>\n                </div>\n                <div class=\"item\">\n                    <div>\n                        <Icon type=\"ios-information-circle-outline\" />\n                        <p>关于</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"action\">\n            <Icon type=\"md-refresh\" @click=\"refreshArticleBtnClick\"/>\n            <Icon type=\"md-add\" @click=\"categoryModal=!categoryModal\"/>\n        </div>\n\n        <!-- 添加分类模态框   -->\n        <Modal\n            v-model=\"categoryModal\"\n            title=\"添加分类\"\n            @on-ok=\"handleAddCategory\"\n            @keyup.enter.native=\"handleAddCategory\"\n        >\n            <Input v-model=\"categoryName\" placeholder=\"请输入分类名称\"/>\n        </Modal>\n\n        <!-- 添加rss资源 -->\n        <Modal\n            v-model=\"rssModal\"\n            title=\"添加rss链接\"\n            @on-ok=\"handleAddRss\"\n            @keyup.enter.native=\"handleAddRss\"\n        >\n            <Input v-model=\"rssUrl\" placeholder=\"请输入完整url\"/>\n        </Modal>\n\n        <!-- 分类上下文菜单 -->\n        <Dropdown\n            trigger=\"click\" \n            ref=\"categoryContextMenu\"\n            id=\"categoryContextMenu\"\n            style=\"display:fixed;\"\n            :transfer=\"true\"\n            @on-click=\"handleCategoryContextMenu\">\n            <DropdownMenu slot=\"list\">\n                <DropdownItem name=\"rename\">重命名</DropdownItem>\n                <DropdownItem name=\"delete\" style=\"color: #ed4014;\">删除</DropdownItem>\n            </DropdownMenu>\n        </Dropdown>\n\n        <!-- rss资源项目上下文菜单 -->\n        <Dropdown\n            trigger=\"click\" \n            ref=\"rssContextMenu\"\n            id=\"rssContextMenu\"\n            style=\"display:fixed;\"\n            :transfer=\"true\"\n            @on-click=\"handleRssContextMenu\">\n            <DropdownMenu slot=\"list\">\n                <DropdownItem name=\"rename\">重命名</DropdownItem>\n                <DropdownItem name=\"delete\" style=\"color: #ed4014;\">删除</DropdownItem>\n            </DropdownMenu>\n        </Dropdown>\n    </div>\n</template>\n\n\n<script>\nimport CollapseMenuItem from './CollapseMenuItem'\nimport CategoryAPI from '../../api/category';\nimport ResourceAPI from '../../api/resource';\n\nexport default {\n    name:'sider-bar',\n    components:{\n        CollapseMenuItem\n    },\n    data(){\n        return {\n            categoryModal:false,\n            rssModal:false,\n            categoryName:'',//添加分类的名称\n            rssUrl:'',//添加rss的url\n            addRssCategoryId:-1,//添加rss时的分类id\n            refreshArticleBtnClick:null,\n        }\n    },\n    created(){\n        this.refreshArticleBtnClick = this.throttle(this.handleArticleRefresh)\n    },\n    computed:{\n        //用户头像\n        userAvatar(){\n            return this.$store.user.avatar;\n        },\n        //用户rss分类\n        categoryList(){\n            return this.$store.categoryList;\n        },\n    },\n    methods:{\n        openRssAddModal(id){\n            this.addRssCategoryId = id;\n            this.rssModal = !this.rssModal;\n        },\n        //添加rss分类\n        async handleAddCategory(){\n            this.categoryModal = false;\n\n            if(!this.categoryName){\n                this.$Message.error('分类名称不能为空');\n                return;\n            }\n\n            const res = await CategoryAPI.add({\n                name:this.categoryName.trim(),\n            })\n            if(res.data.status){\n                this.$store.categoryList.unshift(res.data.data);\n            }else{\n                this.$Message.error(res.data.data);\n            }\n        },\n        //添加rss\n        async handleAddRss(){\n            this.rssModal = false;\n\n            if(!this.rssUrl){\n                this.$Message.error('rss资源链接不能为空');\n                return;\n            }\n\n            const res = await ResourceAPI.add({\n                url:this.rssUrl,\n                categoryId:this.addRssCategoryId,\n            })\n            \n            if(res.data.status){\n                this.$store.resourceList.unshift(res.data.data.resource);\n            }else{\n                this.$Message.error(res.data.data);\n            }\n\n        },\n        //刷新文章 再次拉取文章 查看是否有新的文章\n        async handleArticleRefresh(){\n            this.$store.isLoading = true;\n\n            const res = await ResourceAPI.refreshArticle(this.$store.rssId)\n            if(res.data.status){\n                this.$store.articleList=res.data.data;\n            }else{\n                this.$Message.error(res.data.data);\n            }\n\n            this.$store.isLoading = false;\n        },\n        //节流\n        throttle(fn){\n            let map = {};\n            return ()=>{\n                if(!map[this.$store.rssId]){\n                    map[this.$store.rssId]=true\n                    fn()\n                    setTimeout(()=>{map[this.$store.rssId]=false},5*60*1000)\n                }else{\n                    this.$Message.error('不要频繁刷新')\n                }\n            }\n        },\n        //分类上下文菜单\n        async handleCategoryContextMenu(op){\n            if(op === 'delete'){\n                const res = await CategoryAPI.delete(this.$store.contextMenuCId)\n                if(res.data.status){\n                    if(res.data.status){\n                        //删除store里面的数据\n                        const index = this.$store.categoryList.findIndex(item=>item.id === this.$store.contextMenuCId)\n                        if(index !== -1){\n                            this.$store.categoryList.splice(index,1)\n                        }else{\n                            this.$Message.error('发生错误')\n                        }\n                    }else{\n                        this.$Message.error(res.data.data)\n                    }\n                }\n            }\n\n        },\n        //rss 上下文菜单\n        async handleRssContextMenu(op){\n            if(op === 'delete'){\n                const res = await ResourceAPI.delete(this.$store.contextMenuRId)\n                if(res.data.status){\n                    if(res.data.status){\n                        //删除store里面的数据\n                        const index = this.$store.resourceList.findIndex(item=>item.id === this.$store.contextMenuRId)\n                        if(index !== -1){\n                            this.$store.resourceList.splice(index,1)\n                        }else{\n                            this.$Message.error('发生错误')\n                        }\n                    }else{\n                        this.$Message.error(res.data.data)\n                    }\n                }\n            }\n        }\n    }\n}\n</script>\n\n\n<style lang=\"scss\">\n.sider-bar{\n    color: $theme-color-white;\n    height: 100%;\n    position: relative;\n\n    .user{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img{\n            width: 80px;\n            height: 80px;\n            border-radius: 40px;\n            margin: 20px 0;\n        }\n    }\n\n    .menu{\n        height: 70%;\n        overflow-y:auto;\n\n        &::-webkit-scrollbar{\n            width: 0;\n        } \n\n        .group{\n            margin-bottom: 40px; \n\n            .item{\n                >div:first-child{\n                    padding: 5px 10px;\n                    display: flex;\n                    align-items: center;\n                    cursor: pointer;\n\n                    p{\n                        margin: 0 5px;\n                    }\n                    \n                    .ivu-icon{\n                        font-weight: bold;\n                    }\n\n                    &:hover{\n                        background: $theme-color-1;\n                    }\n                }\n            }\n        }\n        \n    }\n\n    .action{\n        position:absolute;\n        bottom: 0;\n        left: 0;\n        padding: 10px 10px;\n        width: 100%;\n\n\n        .ivu-icon{\n            cursor: pointer;\n            font-weight: bold;\n        }\n\n        .ivu-icon:first-child{\n            margin-right: 80%; \n        }\n\n    }\n\n}\n</style>\n"]}]}